{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DetailsScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    cryptoList = _useState6[0],\n    setCryptoList = _useState6[1];\n  useEffect(function () {\n    var params = new URLSearchParams({\n      vs_currency: 'usd',\n      order: 'market_cap_desc',\n      per_page: 20,\n      page: 1\n    });\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?${params}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setCryptoList(result);\n      setLoading(false);\n    }).catch(function (error) {\n      setLoading(false);\n      setError(error);\n    });\n  }, []);\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"orange\",\n      style: styles.isLoading\n    });\n  }\n  if (error) {\n    return _jsxs(Text, {\n      children: [\"Erreur : \", error.message]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Les 20 cryptos les plus populaires :\"\n    }), _jsx(FlatList, {\n      data: cryptoList,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(Text, {\n          style: styles.text,\n          children: [item.name, \" + \", item.symbol]\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  isLoading: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ActivityIndicator","FlatList","jsx","_jsx","jsxs","_jsxs","DetailsScreen","_useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","cryptoList","setCryptoList","params","URLSearchParams","vs_currency","order","per_page","page","fetch","method","headers","then","response","json","result","catch","size","color","style","styles","children","message","container","text","data","keyExtractor","item","id","toString","renderItem","_ref","name","symbol","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/DetailsScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, FlatList } from 'react-native';\r\n\r\nexport default function DetailsScreen() {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [cryptoList, setCryptoList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams({\r\n            vs_currency: 'usd',\r\n            order: 'market_cap_desc',\r\n            per_page: 20,\r\n            page: 1,\r\n        });\r\n    \r\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?${params}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setCryptoList(result);\r\n            setLoading(false);\r\n        })\r\n        .catch(error => {\r\n            setLoading(false);\r\n            setError(error);\r\n        });\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <ActivityIndicator size=\"large\" color=\"orange\" style={styles.isLoading} />;\r\n    }\r\n\r\n    if (error) {\r\n        return <Text>Erreur : {error.message}</Text>;\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>Les 20 cryptos les plus populaires :</Text>\r\n            <FlatList\r\n                data={cryptoList}\r\n                keyExtractor={(item) => item.id.toString()}\r\n                renderItem={({ item }) => (\r\n                    <Text style={styles.text}>{item.name} + {item.symbol}</Text>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    isLoading: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}