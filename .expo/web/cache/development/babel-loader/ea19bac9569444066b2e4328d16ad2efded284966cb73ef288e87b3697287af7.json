{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { auth, signInWithEmailAndPassword, createUserWithEmailAndPassword, db } from \"../FirebaseConfig.js\";\nimport { setDoc, doc } from 'firebase/firestore';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var signIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        yield signInWithEmailAndPassword(auth, email, password);\n        navigation.navigate('Details');\n      } catch (error) {\n        alert('Email ou mot de passe incorrect');\n        console.log(error);\n      }\n      setLoading(false);\n    });\n    return function signIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var signUp = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n        var user = userCredential.user;\n        yield setDoc(doc(db, \"users\", user.uid), {\n          users: user.uid,\n          CoinsLike: [],\n          NftLike: [],\n          email: email\n        });\n        navigation.navigate('Details');\n      } catch (error) {\n        alert('Email ou mot de passe invalide');\n        console.log(error);\n      }\n      setLoading(false);\n    });\n    return function signUp() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/login.jpg\"),\n      style: styles.backgroundImage,\n      children: [_jsx(Ionicons, {\n        name: \"person-circle-outline\",\n        style: {\n          marginBottom: 20\n        },\n        size: 100,\n        color: \"white\"\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Ionicons, {\n            name: \"mail-outline\",\n            size: 24,\n            color: \"orange\",\n            style: styles.icon\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Email\",\n            autoCapitalize: \"none\",\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            value: email\n          })]\n        }), _jsxs(View, {\n          style: styles.inputContainer,\n          children: [_jsx(Ionicons, {\n            name: \"lock-closed-outline\",\n            size: 24,\n            color: \"orange\",\n            style: styles.icon\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Password\",\n            autoCapitalize: \"none\",\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            value: password,\n            secureTextEntry: true\n          })]\n        }), loading ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"orange\"\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: signIn,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Se connecter\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonSignUp,\n            onPress: signUp,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"S'inscrire\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#121212'\n  },\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formContainer: {\n    width: '80%',\n    maxWidth: 400,\n    padding: 20,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: 10,\n    height: 400,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    backgroundColor: 'white',\n    borderRadius: 10\n  },\n  icon: {\n    marginLeft: 10\n  },\n  input: {\n    flex: 1,\n    height: 50,\n    padding: 10\n  },\n  button: {\n    backgroundColor: 'orange',\n    borderRadius: 10,\n    padding: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n    width: '100%'\n  },\n  buttonSignUp: {\n    backgroundColor: 'rgba(255, 165, 0, 0.75)',\n    borderRadius: 10,\n    padding: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n    width: '100%'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","TouchableOpacity","Text","ActivityIndicator","ImageBackground","auth","signInWithEmailAndPassword","createUserWithEmailAndPassword","db","setDoc","doc","Ionicons","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","signIn","_ref2","_asyncToGenerator","navigate","error","alert","console","log","apply","arguments","signUp","_ref3","userCredential","user","uid","users","CoinsLike","NftLike","style","styles","container","children","source","require","backgroundImage","name","marginBottom","size","color","formContainer","inputContainer","icon","input","placeholder","autoCapitalize","onChangeText","text","value","secureTextEntry","button","onPress","buttonText","buttonSignUp","create","flex","alignItems","justifyContent","backgroundColor","width","height","maxWidth","padding","borderRadius","flexDirection","marginLeft","fontSize","fontWeight"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TextInput, TouchableOpacity, Text, ActivityIndicator, ImageBackground } from 'react-native';\r\nimport { auth, signInWithEmailAndPassword, createUserWithEmailAndPassword, db } from '../FirebaseConfig.js';\r\nimport { setDoc, doc } from 'firebase/firestore';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nexport default function Login({ navigation }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const signIn = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await signInWithEmailAndPassword(auth, email, password);\r\n            navigation.navigate('Details');\r\n        } catch (error) {\r\n            alert('Email ou mot de passe incorrect');\r\n            console.log(error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const signUp = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n            const user = userCredential.user;\r\n            await setDoc(doc(db, \"users\", user.uid), {\r\n                users: user.uid,\r\n                CoinsLike: [],\r\n                NftLike: [],\r\n                email: email,\r\n            });\r\n\r\n            navigation.navigate('Details');\r\n        } catch (error) {\r\n            alert('Email ou mot de passe invalide');\r\n            console.log(error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={require('../assets/login.jpg')} style={styles.backgroundImage}>\r\n                <Ionicons name=\"person-circle-outline\" style={{ marginBottom: 20 }} size={100} color=\"white\" />\r\n                <View style={styles.formContainer}>\r\n                    <View style={styles.inputContainer}>\r\n                        <Ionicons name=\"mail-outline\" size={24} color=\"orange\" style={styles.icon} />\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            placeholder=\"Email\"\r\n                            autoCapitalize='none'\r\n                            onChangeText={text => setEmail(text)}\r\n                            value={email}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.inputContainer}>\r\n                        <Ionicons name=\"lock-closed-outline\" size={24} color=\"orange\" style={styles.icon} />\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            placeholder=\"Password\"\r\n                            autoCapitalize='none'\r\n                            onChangeText={text => setPassword(text)}\r\n                            value={password}\r\n                            secureTextEntry={true}\r\n                        />\r\n                    </View>\r\n                    {loading ? (\r\n                        <ActivityIndicator size=\"large\" color=\"orange\" />\r\n                    ) : (\r\n                        <>\r\n                            <TouchableOpacity style={styles.button} onPress={signIn}>\r\n                                <Text style={styles.buttonText}>Se connecter</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.buttonSignUp} onPress={signUp}>\r\n                                <Text style={styles.buttonText}>S'inscrire</Text>\r\n                            </TouchableOpacity>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#121212',\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    formContainer: {\r\n        width: '80%',\r\n        maxWidth: 400,\r\n        padding: 20,\r\n        backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n        borderRadius: 10,\r\n        height: 400,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 20,\r\n        backgroundColor: 'white',\r\n        borderRadius: 10,\r\n    },\r\n    icon: {\r\n        marginLeft: 10,\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        height: 50,\r\n        padding: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: 'orange',\r\n        borderRadius: 10,\r\n        padding: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n        width: '100%',\r\n    },\r\n    buttonSignUp: {\r\n        backgroundColor: 'rgba(255, 165, 0, 0.75)',\r\n        borderRadius: 10,\r\n        padding: 15,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginBottom: 10,\r\n        width: '100%',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}