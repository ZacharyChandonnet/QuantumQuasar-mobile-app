{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport NftsData from \"../Nfts.json\";\nimport NavBar from \"./Navbar\";\nimport FavoriteNft from \"../screens/FavoriteNft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Nft(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    randomNfts = _useState4[0],\n    setRandomNfts = _useState4[1];\n  useEffect(function () {\n    var shuffledNfts = _toConsumableArray(NftsData).sort(function () {\n      return Math.random() - 0.5;\n    });\n    setRandomNfts(shuffledNfts);\n    setTimeout(function () {\n      setLoading(false);\n    }, 500);\n  }, []);\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"orange\",\n      style: styles.isLoading\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(NavBar, {\n      style: styles.navBar,\n      navigation: navigation\n    }), _jsx(FlatList, {\n      data: randomNfts,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.itemContainer,\n          onPress: function onPress() {\n            return navigation.navigate('NftDetails', {\n              id: item.id\n            });\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: item.image.small\n            },\n            style: styles.cryptoImage\n          }), _jsxs(View, {\n            style: styles.textContainer,\n            children: [_jsx(Text, {\n              style: styles.cryptoName,\n              children: item.name\n            }), _jsx(Text, {\n              style: styles.cryptoSymbol,\n              children: item.symbol.toUpperCase()\n            }), _jsxs(Text, {\n              style: styles.price,\n              children: [item.floor_price.usd, \" USD\"]\n            })]\n          }), _jsx(View, {\n            style: styles.favoriteCoinContainer,\n            children: _jsx(FavoriteNft, {\n              nftId: item.id,\n              name: item.name,\n              price: item.floor_price.usd,\n              image: item.image.small,\n              symbol: item.symbol\n            })\n          })]\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#121212',\n    alignItems: 'center'\n  },\n  navBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    paddingHorizontal: 20,\n    paddingTop: 60\n  },\n  navItem: {\n    padding: 10\n  },\n  navText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  title: {\n    color: 'orange',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  isLoading: {\n    flex: 1,\n    backgroundColor: '#121212',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 70,\n    borderBottomWidth: 1,\n    borderBottomColor: '#333',\n    width: '100%'\n  },\n  cryptoImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  textContainer: {\n    marginLeft: 15\n  },\n  cryptoName: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  cryptoSymbol: {\n    color: '#888',\n    fontSize: 14,\n    marginTop: 5\n  },\n  price: {\n    color: 'white',\n    fontSize: 14,\n    marginTop: 5\n  },\n  searchBarContainer: {\n    width: '90%',\n    marginTop: 20,\n    marginBottom: 20,\n    backgroundColor: 'transparent',\n    borderTopColor: 'transparent',\n    borderBottomColor: 'transparent',\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  },\n  searchBarInputContainer: {\n    backgroundColor: 'white',\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: '#555'\n  },\n  favoriteCoinContainer: {\n    position: 'absolute',\n    top: 10,\n    right: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","TouchableOpacity","FlatList","Image","ActivityIndicator","NftsData","NavBar","FavoriteNft","jsx","_jsx","jsxs","_jsxs","Nft","_ref","navigation","_useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","randomNfts","setRandomNfts","shuffledNfts","_toConsumableArray","sort","Math","random","setTimeout","size","color","style","styles","container","children","navBar","data","keyExtractor","item","id","toString","renderItem","_ref2","itemContainer","onPress","navigate","source","uri","image","small","cryptoImage","textContainer","cryptoName","name","cryptoSymbol","symbol","toUpperCase","price","floor_price","usd","favoriteCoinContainer","nftId","create","flex","backgroundColor","alignItems","flexDirection","justifyContent","width","paddingHorizontal","paddingTop","navItem","padding","navText","fontWeight","title","fontSize","borderBottomWidth","borderBottomColor","height","borderRadius","marginLeft","marginTop","searchBarContainer","marginBottom","borderTopColor","paddingVertical","searchBarInputContainer","borderWidth","borderColor","position","top","right"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/Nft.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, FlatList, Image, ActivityIndicator } from 'react-native';\r\nimport NftsData from '../Nfts.json';\r\nimport NavBar from './Navbar';\r\nimport FavoriteNft from '../screens/FavoriteNft';\r\n\r\nexport default function Nft({ navigation }) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [randomNfts, setRandomNfts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const shuffledNfts = [...NftsData].sort(() => Math.random() - 0.5);\r\n        setRandomNfts(shuffledNfts);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <ActivityIndicator size=\"large\" color=\"orange\" style={styles.isLoading} />;\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <NavBar style={styles.navBar} navigation={navigation} />\r\n            <FlatList\r\n                data={randomNfts}\r\n                keyExtractor={(item) => item.id.toString()}\r\n                renderItem={({ item }) => (\r\n                    <TouchableOpacity\r\n                        style={styles.itemContainer}\r\n                        onPress={() => navigation.navigate('NftDetails', { id: item.id })}\r\n                    >\r\n                        <Image\r\n                            source={{ uri: item.image.small }}\r\n                            style={styles.cryptoImage}\r\n                        />\r\n                        <View style={styles.textContainer}>\r\n                            <Text style={styles.cryptoName}>{item.name}</Text>\r\n                            <Text style={styles.cryptoSymbol}>{item.symbol.toUpperCase()}</Text>\r\n                            <Text style={styles.price}>{item.floor_price.usd} USD</Text>\r\n                        </View>\r\n                        <View style={styles.favoriteCoinContainer}>\r\n                            <FavoriteNft nftId={item.id} name={item.name} price={item.floor_price.usd} image={item.image.small} symbol={item.symbol}/>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#121212',\r\n        alignItems: 'center',\r\n    },\r\n    navBar: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        paddingHorizontal: 20,\r\n        paddingTop: 60,\r\n    },\r\n    navItem: {\r\n        padding: 10,\r\n    },\r\n    navText: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n    title: {\r\n        color: 'orange',\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n    },\r\n    isLoading: {\r\n        flex: 1,\r\n        backgroundColor: '#121212',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    itemContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        padding: 70,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#333',\r\n        width: '100%',\r\n    },\r\n    cryptoImage: {\r\n        width: 40,\r\n        height: 40,\r\n        borderRadius: 20,\r\n    },\r\n    textContainer: {\r\n        marginLeft: 15,\r\n    },\r\n    cryptoName: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    cryptoSymbol: {\r\n        color: '#888',\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n    },\r\n    price: {\r\n        color: 'white',\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n    },\r\n    searchBarContainer: {\r\n        width: '90%',\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        backgroundColor: 'transparent',\r\n        borderTopColor: 'transparent',\r\n        borderBottomColor: 'transparent',\r\n        paddingHorizontal: 0,\r\n        paddingVertical: 0,\r\n    },\r\n    searchBarInputContainer: {\r\n        backgroundColor: 'white',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        borderColor: '#555',\r\n    },\r\n    favoriteCoinContainer: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 10,\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}