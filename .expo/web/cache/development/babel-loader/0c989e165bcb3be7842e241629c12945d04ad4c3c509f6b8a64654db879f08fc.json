{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { StatusBar } from 'expo-status-bar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DetailsScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    resultat = _useState6[0],\n    setResultat = _useState6[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Les cryptos\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsxs(Image, {\n      children: [\"source=\", \"../assets/home.png\"]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ActivityIndicator","Image","StatusBar","jsx","_jsx","jsxs","_jsxs","DetailsScreen","_useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","resultat","setResultat","style","styles","container","children","text","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","fontWeight"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/DetailsScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, Image } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\nexport default function DetailsScreen() {\r\n\r\n    let [isLoading, setLoading] = useState(true);\r\n    let [error, setError] = useState();\r\n    let [resultat, setResultat] = useState();\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\"https://api.coingecko.com/api/v3/coins/list\")\r\n    //         .then(res => res.json())\r\n    //         .then(resultat => {\r\n    //             setResultat(resultat);\r\n    //             setLoading(false);\r\n    //         },\r\n    //             (error) => {\r\n    //                 setLoading(false);\r\n    //                 setError(error);\r\n    //             }\r\n    //         )\r\n    // }, []);\r\n\r\n    // if (isLoading) {\r\n    //     return <ActivityIndicator size=\"large\" />;\r\n    // }\r\n    // if (error) {\r\n    //     return <Text>Erreur : {error.message}</Text>;\r\n    // }\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>Les cryptos</Text>\r\n            <StatusBar style=\"auto\" />\r\n            <Image>\r\n                source={\"../assets/home.png\"}\r\n            </Image>\r\n        </View>\r\n    )\r\n\r\n    // return (\r\n    //     <View style={styles.container}>\r\n    //         <Text style={styles.text}>Les cryptos</Text>\r\n    //         <StatusBar style=\"auto\" />\r\n    //     </View>\r\n    // );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAEnD,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAEpC,IAAAC,SAAA,GAA8BZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAwBjB,QAAQ,CAAC,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAA8BrB,QAAQ,CAAC,CAAC;IAAAsB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAsB1B,OACIZ,KAAA,CAACT,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BpB,IAAA,CAACN,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACG,IAAK;MAAAD,QAAA,EAAC;IAAW,CAAM,CAAC,EAC5CpB,IAAA,CAACF,SAAS;MAACmB,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1Bf,KAAA,CAACL,KAAK;MAAAuB,QAAA,GAAC,SACI,EAAC,oBAAoB;IAAA,CACzB,CAAC;EAAA,CACN,CAAC;AASf;AAEA,IAAMF,MAAM,GAAGvB,UAAU,CAAC2B,MAAM,CAAC;EAC7BH,SAAS,EAAE;IACPI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDL,IAAI,EAAE;IACFM,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}