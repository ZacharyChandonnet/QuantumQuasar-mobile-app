{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NftDetails(_ref) {\n  var _nftDetails$image, _nftDetails$floor_pri;\n  var route = _ref.route;\n  var id = route.params.id;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    nftDetails = _useState2[0],\n    setNftDetails = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var fetchNftData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(`https://api.coingecko.com/api/v3/nfts/${id}`);\n          var data = yield response.json();\n          if (data) {\n            setNftDetails(data);\n          }\n          setLoading(false);\n        } catch (error) {\n          setLoading(false);\n          console.error(\"Error fetching NFT data:\", error);\n        }\n      });\n      return function fetchNftData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchNftData();\n  }, [id]);\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"orange\",\n      style: styles.isLoading\n    });\n  }\n  var floorPriceData = Object.entries(nftDetails.floor_price || {}).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      time = _ref4[0],\n      price = _ref4[1];\n    return {\n      time: time,\n      price: price.native_currency\n    };\n  });\n  return _jsx(ImageBackground, {\n    source: {\n      uri: (_nftDetails$image = nftDetails.image) == null ? void 0 : _nftDetails$image.small\n    },\n    style: styles.backgroundImage,\n    resizeMode: \"cover\",\n    blurRadius: 1,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(Text, {\n        style: styles.text,\n        children: [nftDetails.name, \" (\", id.toUpperCase(), \")\"]\n      }), _jsxs(Text, {\n        style: styles.detailText,\n        children: [\"Floor Price: $\", (_nftDetails$floor_pri = nftDetails.floor_price) == null ? void 0 : _nftDetails$floor_pri.native_currency]\n      }), floorPriceData.length > 0 ? _jsx(LineChart, {\n        data: {\n          labels: floorPriceData.map(function () {\n            return '';\n          }),\n          datasets: [{\n            data: floorPriceData.map(function (dataPoint) {\n              return dataPoint.price;\n            })\n          }]\n        },\n        width: 385,\n        height: 320,\n        yAxisLabel: \"$\",\n        yAxisSuffix: \"k\",\n        withInnerLines: false,\n        withOuterLines: true,\n        chartConfig: {\n          backgroundColor: \"#121212\",\n          backgroundGradientFrom: \"#121212\",\n          backgroundGradientTo: \"#121212\",\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return `rgba(255, 165, 0, ${opacity})`;\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return `rgba(255, 255, 255, ${opacity})`;\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: \"1\",\n            strokeWidth: \"1\",\n            stroke: \"#ffa500\"\n          }\n        },\n        bezier: true,\n        style: {\n          marginVertical: 8,\n          borderRadius: 16\n        }\n      }) : _jsx(Text, {\n        style: styles.noDataText,\n        children: \"No data available\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    paddingTop: 70\n  },\n  text: {\n    color: 'orange',\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textTransform: 'uppercase'\n  },\n  detailText: {\n    color: 'white',\n    fontSize: 14,\n    marginBottom: 5\n  },\n  noDataText: {\n    color: 'white',\n    fontSize: 16,\n    fontStyle: 'italic'\n  },\n  isLoading: {\n    flex: 1,\n    backgroundColor: '#121212',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ActivityIndicator","ImageBackground","LineChart","jsx","_jsx","jsxs","_jsxs","NftDetails","_ref","_nftDetails$image","_nftDetails$floor_pri","route","id","params","_useState","_useState2","_slicedToArray","nftDetails","setNftDetails","_useState3","_useState4","isLoading","setLoading","fetchNftData","_ref2","_asyncToGenerator","response","fetch","data","json","error","console","apply","arguments","size","color","style","styles","floorPriceData","Object","entries","floor_price","map","_ref3","_ref4","time","price","native_currency","source","uri","image","small","backgroundImage","resizeMode","blurRadius","children","container","text","name","toUpperCase","detailText","length","labels","datasets","dataPoint","width","height","yAxisLabel","yAxisSuffix","withInnerLines","withOuterLines","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","undefined","labelColor","borderRadius","propsForDots","r","strokeWidth","stroke","bezier","marginVertical","noDataText","create","flex","alignItems","paddingTop","fontSize","fontWeight","marginBottom","textTransform","fontStyle","justifyContent"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/NftDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, ImageBackground } from 'react-native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\n\r\nexport default function NftDetails({ route }) {\r\n  const { id } = route.params;\r\n  const [nftDetails, setNftDetails] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchNftData = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.coingecko.com/api/v3/nfts/${id}`);\r\n        const data = await response.json();\r\n\r\n        if (data) {\r\n          setNftDetails(data);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"Error fetching NFT data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchNftData();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <ActivityIndicator size=\"large\" color=\"orange\" style={styles.isLoading} />;\r\n  }\r\n\r\n  const floorPriceData = Object.entries(nftDetails.floor_price || {}).map(([time, price]) => ({\r\n    time,\r\n    price: price.native_currency,\r\n  }));\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: nftDetails.image?.small }}\r\n      style={styles.backgroundImage}\r\n      resizeMode='cover'\r\n      blurRadius={1}\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>{nftDetails.name} ({id.toUpperCase()})</Text>\r\n        <Text style={styles.detailText}>Floor Price: ${nftDetails.floor_price?.native_currency}</Text>\r\n        \r\n        {floorPriceData.length > 0 ? (\r\n          <LineChart\r\n            data={{\r\n              labels: floorPriceData.map(() => ''),\r\n              datasets: [\r\n                {\r\n                  data: floorPriceData.map(dataPoint => dataPoint.price),\r\n                },\r\n              ],\r\n            }}\r\n            width={385}\r\n            height={320}\r\n            yAxisLabel=\"$\"\r\n            yAxisSuffix=\"k\"\r\n            withInnerLines={false}\r\n            withOuterLines={true}\r\n            chartConfig={{\r\n              backgroundColor: \"#121212\",\r\n              backgroundGradientFrom: \"#121212\",\r\n              backgroundGradientTo: \"#121212\",\r\n              decimalPlaces: 2,\r\n              color: (opacity = 1) => `rgba(255, 165, 0, ${opacity})`,\r\n              labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n              style: {\r\n                borderRadius: 16,\r\n              },\r\n              propsForDots: {\r\n                r: \"1\",\r\n                strokeWidth: \"1\",\r\n                stroke: \"#ffa500\",\r\n              },\r\n            }}\r\n            bezier\r\n            style={{\r\n              marginVertical: 8,\r\n              borderRadius: 16,\r\n            }}\r\n          />\r\n        ) : (\r\n          <Text style={styles.noDataText}>No data available</Text>\r\n        )}\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    paddingTop: 70,\r\n  },\r\n  text: {\r\n    color: 'orange',\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    textTransform: 'uppercase',\r\n  },\r\n  detailText: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n  },\r\n  noDataText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontStyle: 'italic',\r\n  },\r\n  isLoading: {\r\n    flex: 1,\r\n    backgroundColor: '#121212',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    resizeMode: 'cover',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}