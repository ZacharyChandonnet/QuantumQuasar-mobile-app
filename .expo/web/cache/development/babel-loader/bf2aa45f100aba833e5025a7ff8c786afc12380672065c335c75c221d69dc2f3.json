{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { StatusBar } from 'expo-status-bar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Nft(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Nft = _useState4[0],\n    setNft = _useState4[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('https://api.coingecko.com/api/v3/nfts/list');\n          var resultat = yield response.json();\n          if (Array.isArray(resultat)) {\n            var randomNfts = resultat.sort(function () {\n              return 0.5 - Math.random();\n            }).slice(0, 20);\n            setNft(randomNfts);\n            console.log(randomNfts);\n            setTimeout(function () {\n              setLoading(false);\n            }, 500);\n          } else {\n            console.error(\"API response is not an array:\", resultat);\n          }\n        } catch (error) {\n          console.error(\"Error fetching NFT:\", error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"orange\",\n      style: styles.isLoading\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsxs(ImageBackground, {\n      source: require(\"../assets/background.png\"),\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.navBar,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"NFT\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.navItem,\n          onPress: function onPress() {\n            return navigation.navigate('Home');\n          },\n          children: _jsx(Text, {\n            style: styles.navText,\n            children: \"Tendances\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.navItem,\n          onPress: function onPress() {\n            return navigation.navigate('Search');\n          },\n          children: _jsx(Text, {\n            style: styles.navText,\n            children: \"Recherche\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"NFT\"\n        }), _jsx(View, {\n          style: styles.itemContainer,\n          children: _jsxs(View, {\n            style: styles.textContainer,\n            children: [_jsx(Text, {\n              style: styles.cryptoName,\n              children: \"NFT\"\n            }), _jsx(Text, {\n              style: styles.cryptoSymbol,\n              children: \"NFT\"\n            })]\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#121212',\n    alignItems: 'center'\n  },\n  navBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    paddingHorizontal: 20,\n    paddingTop: 60\n  },\n  navItem: {\n    padding: 10\n  },\n  navText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  title: {\n    color: 'orange',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  isLoading: {\n    flex: 1,\n    backgroundColor: '#121212',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 70,\n    borderBottomWidth: 1,\n    borderBottomColor: '#333',\n    width: '100%'\n  },\n  cryptoImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  textContainer: {\n    marginLeft: 15\n  },\n  cryptoName: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  cryptoSymbol: {\n    color: '#888',\n    fontSize: 14,\n    marginTop: 5\n  },\n  price: {\n    color: 'white',\n    fontSize: 14,\n    marginTop: 5\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ImageBackground","TouchableOpacity","Animated","ActivityIndicator","StatusBar","jsx","_jsx","jsxs","_jsxs","Nft","_ref","navigation","_useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","setNft","fetchData","_ref2","_asyncToGenerator","response","fetch","resultat","json","Array","isArray","randomNfts","sort","Math","random","slice","console","log","setTimeout","error","apply","arguments","size","color","style","styles","container","children","source","require","image","navBar","title","navItem","onPress","navigate","navText","itemContainer","textContainer","cryptoName","cryptoSymbol","create","flex","backgroundColor","alignItems","flexDirection","justifyContent","width","paddingHorizontal","paddingTop","padding","fontWeight","fontSize","borderBottomWidth","borderBottomColor","cryptoImage","height","borderRadius","marginLeft","marginTop","price"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/Nft.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ImageBackground, TouchableOpacity, Animated, ActivityIndicator } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\nexport default function Nft({ navigation }) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [Nft, setNft] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('https://api.coingecko.com/api/v3/nfts/list')\r\n                const resultat = await response.json();\r\n                if (Array.isArray(resultat)) {\r\n                    const randomNfts = resultat.sort(() => 0.5 - Math.random()).slice(0, 20);\r\n                    setNft(randomNfts);\r\n                    console.log(randomNfts);\r\n                    setTimeout(() => {\r\n                        setLoading(false);\r\n                    }, 500);\r\n                } else {\r\n                    console.error(\"API response is not an array:\", resultat);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching NFT:\", error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    if (isLoading) {\r\n        return <ActivityIndicator size=\"large\" color=\"orange\" style={styles.isLoading} />;\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar style=\"light\" />\r\n            <ImageBackground source={require('../assets/background.png')} style={styles.image}>\r\n                <View style={styles.navBar}>\r\n                    <Text style={styles.title}>NFT</Text>\r\n                    <TouchableOpacity style={styles.navItem} onPress={() => navigation.navigate('Home')}>\r\n                        <Text style={styles.navText}>Tendances</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.navItem} onPress={() => navigation.navigate('Search')}>\r\n                        <Text style={styles.navText}>Recherche</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.title}>NFT</Text>\r\n                    <View style={styles.itemContainer}>\r\n                        <View style={styles.textContainer}>\r\n                            <Text style={styles.cryptoName}>NFT</Text>\r\n                            <Text style={styles.cryptoSymbol}>NFT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#121212',\r\n        alignItems: 'center',\r\n    },\r\n    navBar: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        paddingHorizontal: 20,\r\n        paddingTop: 60,\r\n    },\r\n    navItem: {\r\n        padding: 10,\r\n    },\r\n    navText: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n    title: {\r\n        color: 'orange',\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n    },\r\n    isLoading: {\r\n        flex: 1,\r\n        backgroundColor: '#121212',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    itemContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        padding: 70,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#333',\r\n        width: '100%',\r\n    },\r\n    cryptoImage: {\r\n        width: 40,\r\n        height: 40,\r\n        borderRadius: 20,\r\n    },\r\n    textContainer: {\r\n        marginLeft: 15,\r\n    },\r\n    cryptoName: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    cryptoSymbol: {\r\n        color: '#888',\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n    },\r\n    price: {\r\n        color: 'white',\r\n        fontSize: 14,\r\n        marginTop: 5,\r\n    },\r\n})\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}