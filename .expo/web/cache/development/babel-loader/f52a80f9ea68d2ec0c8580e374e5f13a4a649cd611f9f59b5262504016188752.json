{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Ionicons } from '@expo/vector-icons';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NavBar(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    popUp = _useState2[0],\n    setPopUp = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notification = _useState4[0],\n    setNotification = _useState4[1];\n  var togglePopUp = function togglePopUp() {\n    setPopUp(!popUp);\n  };\n  return _jsxs(View, {\n    style: styles.navBar,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.navItem,\n      onPress: function onPress() {\n        return navigation.navigate('Details');\n      },\n      children: _jsx(Text, {\n        style: styles.navText,\n        children: \"Coins\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.navItem,\n      onPress: function onPress() {\n        return navigation.navigate('Nft');\n      },\n      children: _jsx(Text, {\n        style: styles.navText,\n        children: \"NFT's\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.navItem,\n      onPress: function onPress() {\n        return navigation.navigate('Search');\n      },\n      children: _jsx(Text, {\n        style: styles.navText,\n        children: \"Favoris\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.navItem,\n      onPress: togglePopUp,\n      children: _jsx(Ionicons, {\n        name: \"notifications-outline\",\n        size: 24,\n        color: \"#ccc\"\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: popUp,\n      onRequestClose: togglePopUp,\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [notification.length === 0 ? _jsx(Text, {\n            style: styles.modalText,\n            children: \"Aucune notification pour le moment.\"\n          }) : notification.map(function (notif, index) {\n            return _jsx(Text, {\n              style: styles.modalText,\n              children: notif\n            }, index);\n          }), _jsx(Button, {\n            title: \"Fermer\",\n            onPress: togglePopUp\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  navBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#333',\n    marginTop: 50\n  },\n  navItem: {\n    paddingLeft: 25,\n    paddingRight: 25\n  },\n  navText: {\n    fontSize: 16,\n    color: '#ccc'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: '#333',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: '85%',\n    maxWidth: 400\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["Ionicons","React","useState","View","Text","TouchableOpacity","StyleSheet","Modal","Button","jsx","_jsx","jsxs","_jsxs","NavBar","_ref","navigation","_useState","_useState2","_slicedToArray","popUp","setPopUp","_useState3","_useState4","notification","setNotification","togglePopUp","style","styles","navBar","children","navItem","onPress","navigate","navText","name","size","color","animationType","transparent","visible","onRequestClose","centeredView","modalView","length","modalText","map","notif","index","title","create","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","marginTop","paddingLeft","paddingRight","fontSize","flex","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","maxWidth","marginBottom","textAlign"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/Navbar.js"],"sourcesContent":["import { Ionicons } from '@expo/vector-icons';\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Button } from 'react-native';\r\n\r\nexport default function NavBar({ navigation }) {\r\n\r\n    const [popUp, setPopUp] = useState(false);\r\n    const [notification, setNotification] = useState([]);\r\n\r\n    const togglePopUp = () => {\r\n        setPopUp(!popUp);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.navBar}>\r\n            <TouchableOpacity style={styles.navItem} onPress={() => navigation.navigate('Details')}>\r\n                <Text style={styles.navText}>Coins</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.navItem} onPress={() => navigation.navigate('Nft')}>\r\n                <Text style={styles.navText}>NFT's</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.navItem} onPress={() => navigation.navigate('Search')}>\r\n                <Text style={styles.navText}>Favoris</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.navItem} onPress={togglePopUp}>\r\n                <Ionicons\r\n                    name=\"notifications-outline\"\r\n                    size={24}\r\n                    color=\"#ccc\"\r\n                />\r\n            </TouchableOpacity>\r\n\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={popUp}\r\n                onRequestClose={togglePopUp}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        {notification.length === 0 ? (\r\n                            <Text style={styles.modalText}>Aucune notification pour le moment.</Text>\r\n                        ) : (\r\n                            notification.map((notif, index) => (\r\n                                <Text key={index} style={styles.modalText}>{notif}</Text>\r\n                            ))\r\n                        )}\r\n                        <Button title=\"Fermer\" onPress={togglePopUp} />\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    navBar: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#333',\r\n        marginTop: 50,\r\n    },\r\n    navItem: {\r\n        paddingLeft: 25,\r\n        paddingRight: 25,\r\n    },\r\n    navText: {\r\n        fontSize: 16,\r\n        color: '#ccc',\r\n    },\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 22,\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: '#333',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n        width: '85%',\r\n        maxWidth: 400,\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n    },\r\n});\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEvC,IAAAC,SAAA,GAA0Bd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAwCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAEpC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBL,QAAQ,CAAC,CAACD,KAAK,CAAC;EACpB,CAAC;EAED,OACIP,KAAA,CAACT,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,GACvBnB,IAAA,CAACL,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMhB,UAAU,CAACiB,QAAQ,CAAC,SAAS,CAAC;MAAA,CAAC;MAAAH,QAAA,EACnFnB,IAAA,CAACN,IAAI;QAACsB,KAAK,EAAEC,MAAM,CAACM,OAAQ;QAAAJ,QAAA,EAAC;MAAK,CAAM;IAAC,CAC3B,CAAC,EACnBnB,IAAA,CAACL,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMhB,UAAU,CAACiB,QAAQ,CAAC,KAAK,CAAC;MAAA,CAAC;MAAAH,QAAA,EAC/EnB,IAAA,CAACN,IAAI;QAACsB,KAAK,EAAEC,MAAM,CAACM,OAAQ;QAAAJ,QAAA,EAAC;MAAK,CAAM;IAAC,CAC3B,CAAC,EACnBnB,IAAA,CAACL,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMhB,UAAU,CAACiB,QAAQ,CAAC,QAAQ,CAAC;MAAA,CAAC;MAAAH,QAAA,EAClFnB,IAAA,CAACN,IAAI;QAACsB,KAAK,EAAEC,MAAM,CAACM,OAAQ;QAAAJ,QAAA,EAAC;MAAO,CAAM;IAAC,CAC7B,CAAC,EACnBnB,IAAA,CAACL,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAACC,OAAO,EAAEN,WAAY;MAAAI,QAAA,EAC1DnB,IAAA,CAACV,QAAQ;QACLkC,IAAI,EAAC,uBAAuB;QAC5BC,IAAI,EAAE,EAAG;QACTC,KAAK,EAAC;MAAM,CACf;IAAC,CACY,CAAC,EAEnB1B,IAAA,CAACH,KAAK;MACF8B,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,OAAO,EAAEpB,KAAM;MACfqB,cAAc,EAAEf,WAAY;MAAAI,QAAA,EAE5BnB,IAAA,CAACP,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACc,YAAa;QAAAZ,QAAA,EAC7BjB,KAAA,CAACT,IAAI;UAACuB,KAAK,EAAEC,MAAM,CAACe,SAAU;UAAAb,QAAA,GACzBN,YAAY,CAACoB,MAAM,KAAK,CAAC,GACtBjC,IAAA,CAACN,IAAI;YAACsB,KAAK,EAAEC,MAAM,CAACiB,SAAU;YAAAf,QAAA,EAAC;UAAmC,CAAM,CAAC,GAEzEN,YAAY,CAACsB,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;YAAA,OAC1BrC,IAAA,CAACN,IAAI;cAAasB,KAAK,EAAEC,MAAM,CAACiB,SAAU;cAAAf,QAAA,EAAEiB;YAAK,GAAtCC,KAA6C,CAAC;UAAA,CAC5D,CACJ,EACDrC,IAAA,CAACF,MAAM;YAACwC,KAAK,EAAC,QAAQ;YAACjB,OAAO,EAAEN;UAAY,CAAE,CAAC;QAAA,CAC7C;MAAC,CACL;IAAC,CACJ,CAAC;EAAA,CACN,CAAC;AAEf;AAEA,IAAME,MAAM,GAAGrB,UAAU,CAAC2C,MAAM,CAAC;EAC7BrB,MAAM,EAAE;IACJsB,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,MAAM;IACzBC,SAAS,EAAE;EACf,CAAC;EACD3B,OAAO,EAAE;IACL4B,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE;EAClB,CAAC;EACD1B,OAAO,EAAE;IACL2B,QAAQ,EAAE,EAAE;IACZxB,KAAK,EAAE;EACX,CAAC;EACDK,YAAY,EAAE;IACVoB,IAAI,EAAE,CAAC;IACPV,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBK,SAAS,EAAE;EACf,CAAC;EACDf,SAAS,EAAE;IACPoB,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXb,UAAU,EAAE,QAAQ;IACpBc,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACVC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACZ,CAAC;IACDC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZJ,KAAK,EAAE,KAAK;IACZK,QAAQ,EAAE;EACd,CAAC;EACD7B,SAAS,EAAE;IACP8B,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,QAAQ;IACnBvC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}