{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DetailsScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cryptoList = _useState4[0],\n    setCryptoList = _useState4[1];\n  useEffect(function () {\n    var params = new URLSearchParams({\n      vs_currency: 'usd',\n      order: 'market_cap_desc',\n      per_page: 20,\n      page: 1\n    });\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?${params}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setCryptoList(result);\n      setLoading(false);\n    }).catch(function (error) {\n      setLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"orange\",\n      style: styles.isLoading\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Tendances\"\n    }), _jsx(FlatList, {\n      data: cryptoList,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          style: styles.itemContainer,\n          children: [_jsx(Image, {\n            style: styles.cryptoImage,\n            source: {\n              uri: item.image\n            }\n          }), _jsxs(Text, {\n            style: styles.text,\n            children: [item.name, \" (\", item.symbol, \")\"]\n          })]\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  isLoading: {\n    flex: 1,\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  itemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#333333'\n  },\n  cryptoImage: {\n    width: 30,\n    height: 30,\n    marginRight: 10\n  },\n  title: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 60\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ActivityIndicator","FlatList","Image","jsx","_jsx","jsxs","_jsxs","DetailsScreen","_useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","cryptoList","setCryptoList","params","URLSearchParams","vs_currency","order","per_page","page","fetch","method","headers","then","response","json","result","catch","error","size","color","style","styles","container","children","title","data","keyExtractor","item","id","toString","renderItem","_ref","itemContainer","cryptoImage","source","uri","image","text","name","symbol","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","flexDirection","padding","borderBottomWidth","borderBottomColor","width","height","marginRight","marginTop"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/DetailsScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, FlatList, Image } from 'react-native';\r\n\r\nexport default function DetailsScreen() {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [cryptoList, setCryptoList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams({\r\n            vs_currency: 'usd',\r\n            order: 'market_cap_desc',\r\n            per_page: 20,\r\n            page: 1,\r\n        });\r\n\r\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?${params}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setCryptoList(result);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setLoading(false);\r\n\r\n            });\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <ActivityIndicator size=\"large\" color=\"orange\" style={styles.isLoading} />;\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Tendances</Text>\r\n            <FlatList\r\n                data={cryptoList}\r\n                keyExtractor={(item) => item.id.toString()}\r\n                renderItem={({ item }) => (\r\n                    <View style={styles.itemContainer}>\r\n                        <Image\r\n                            style={styles.cryptoImage}\r\n                            source={{ uri: item.image }}\r\n                        />\r\n                        <Text style={styles.text}>{item.name} ({item.symbol})</Text>\r\n                    </View>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    isLoading: {\r\n        flex: 1,\r\n        backgroundColor: '#000000',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    itemContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#333333',\r\n    },\r\n    cryptoImage: {\r\n        width: 30,\r\n        height: 30,\r\n        marginRight: 10,\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginTop: 60,\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}