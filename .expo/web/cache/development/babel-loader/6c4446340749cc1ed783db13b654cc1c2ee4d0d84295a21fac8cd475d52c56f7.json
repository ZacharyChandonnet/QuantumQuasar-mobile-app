{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport NftsData from \"../Nfts.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NftDetails(_ref) {\n  var _nftDetails$image, _nftDetails$floor_pri;\n  var route = _ref.route;\n  var id = route.params.id;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    nftDetails = _useState2[0],\n    setNftDetails = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var fetchNftData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var nft = NftsData.find(function (nft) {\n            return nft.id === id;\n          });\n          if (nft) {\n            setNftDetails(nft);\n          }\n          setLoading(false);\n        } catch (error) {\n          setLoading(false);\n          console.error(\"Error fetching NFT data:\", error);\n        }\n      });\n      return function fetchNftData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchNftData();\n  }, [id]);\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"orange\",\n      style: styles.isLoading\n    });\n  }\n  return _jsx(ImageBackground, {\n    source: {\n      uri: (_nftDetails$image = nftDetails.image) == null ? void 0 : _nftDetails$image.small\n    },\n    style: styles.backgroundImage,\n    resizeMode: \"cover\",\n    blurRadius: 1,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(Text, {\n        style: styles.text,\n        children: [nftDetails.name, \" (\", id.toUpperCase(), \")\"]\n      }), _jsxs(Text, {\n        style: styles.detailText,\n        children: [\"Floor Price: $\", (_nftDetails$floor_pri = nftDetails.floor_price) == null ? void 0 : _nftDetails$floor_pri.native_currency]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    paddingTop: 70\n  },\n  text: {\n    color: 'orange',\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textTransform: 'uppercase'\n  },\n  detailText: {\n    color: 'white',\n    fontSize: 14,\n    marginBottom: 5\n  },\n  isLoading: {\n    flex: 1,\n    backgroundColor: '#121212',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ActivityIndicator","ImageBackground","NftsData","jsx","_jsx","jsxs","_jsxs","NftDetails","_ref","_nftDetails$image","_nftDetails$floor_pri","route","id","params","_useState","_useState2","_slicedToArray","nftDetails","setNftDetails","_useState3","_useState4","isLoading","setLoading","fetchNftData","_ref2","_asyncToGenerator","nft","find","error","console","apply","arguments","size","color","style","styles","source","uri","image","small","backgroundImage","resizeMode","blurRadius","children","container","text","name","toUpperCase","detailText","floor_price","native_currency","create","flex","alignItems","backgroundColor","paddingTop","fontSize","fontWeight","marginBottom","textTransform","justifyContent","width","height"],"sources":["D:/0-ProjetPerso/QuantumQuasar/QuantumQuasar/screens/NftDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, ImageBackground } from 'react-native';\r\nimport NftsData from '../Nfts.json';\r\n\r\nexport default function NftDetails({ route }) {\r\n  const { id } = route.params;\r\n  const [nftDetails, setNftDetails] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchNftData = async () => {\r\n      try {\r\n        const nft = NftsData.find((nft) => nft.id === id);\r\n\r\n        if (nft) {\r\n          setNftDetails(nft);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.error(\"Error fetching NFT data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchNftData();\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <ActivityIndicator size=\"large\" color=\"orange\" style={styles.isLoading} />;\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: nftDetails.image?.small }}\r\n      style={styles.backgroundImage}\r\n      resizeMode='cover'\r\n      blurRadius={1}\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>{nftDetails.name} ({id.toUpperCase()})</Text>\r\n        <Text style={styles.detailText}>Floor Price: ${nftDetails.floor_price?.native_currency}</Text>\r\n        {/* Add other details as needed */}\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    paddingTop: 70,\r\n  },\r\n  text: {\r\n    color: 'orange',\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    textTransform: 'uppercase',\r\n  },\r\n  detailText: {\r\n    color: 'white',\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n  },\r\n  isLoading: {\r\n    flex: 1,\r\n    backgroundColor: '#121212',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    resizeMode: 'cover',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}